package kr.or.tco.prchs.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.annotations.Param;
import org.json.simple.JSONArray;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.tco.cnpt.service.CnptService;
import kr.or.tco.cnpt.vo.CnptVO;
import kr.or.tco.prchs.service.PrchsService;
import kr.or.tco.prchs.vo.PrchsVO;

//매입 컨트롤러
@RequestMapping("/prchs")
@Controller
public class PrchsController {
	
	@Autowired
	PrchsService prchsService;
	
	final static Logger logger = 
			LoggerFactory.getLogger(PrchsController.class);
	
	//매입 발주서 화면
	@GetMapping("/prchsOrder")
	public String prchsOrder(Model model
			,@RequestParam(required = false)String startDay
			,@RequestParam(required = false)String endDay) {
		
		logger.info("시작일 : " + startDay);
		logger.info("시작일 : " + endDay);
		
		//맵 만들기
		Map<String, String> dateMap = new HashMap<String, String>();
		
		//맵에 저장
		dateMap.put("startDay", startDay);
		dateMap.put("endDay", endDay);
		
		//매입발주서에 저장된 목록 가져오기
		List<PrchsVO> prchsList = prchsService.getSvdPrchsOrdrList(dateMap);
		//Model에 저장
		model.addAttribute("prchsList", prchsList);
		return "prchs/prchsOrder";
	}
	
	//검색어 자동완성
//	@ResponseBody
//	@GetMapping(value = "/searchCnpt")
//	public List<CnptVO> searchCnpt(@RequestParam(value="keyWord") String keyWord) {
//		logger.info("keyWord 넘어왔나??????????????????????? : " + keyWord);
//		List<CnptVO> cnptList = prchsService.cnptSearchList(keyWord);
//		logger.info(cnptList.toString());
//		return cnptList;
//	}
	
	//검색어 자동완성
	@RequestMapping(value = "/searchCnpt", 
            method= {RequestMethod.GET},
            produces = "application/json; charset=utf8")
	@ResponseBody
	public void searchCnpt(Model model,HttpServletRequest request,
	                   HttpServletResponse response) throws IOException {
	                   
		String searchValue = request.getParameter("searchValue"); 
		JSONArray arrayObj = prchsService.autoSearch(searchValue);
		
		response.setCharacterEncoding("UTF-8");
		PrintWriter pw = response.getWriter(); 
		pw.print(arrayObj); 
		pw.flush(); 
		pw.close();
	
	}
	
	//매입아이디로 매입정보 가져오기
	@GetMapping("/getPrchsDetail")
	public @ResponseBody List<PrchsVO> getPrchsVODetail(@RequestParam("paramId") String prchsId) {
		logger.info("아이디 잘 들왓나보자 : " + prchsId);
		List<PrchsVO> prchsList = prchsService.getPrchsVODetail(prchsId);
		//찍어보기
		logger.info(prchsList.toString());
		return prchsList;
	}
	
	//매입발주서 전송하기
	@ResponseBody
	@PostMapping("/sendPrchs")
	public int sendPrchs(@ModelAttribute PrchsVO prchsVO) {
		logger.info("VO야 잘 드러완니....? : " + prchsVO);
		logger.info("응.. 드러와떠..");
		
		
//		int result = prchsService.sendPrchs(prchsVO);
		return 1;
	}
	
	//매입 명세서 화면
	@GetMapping("/prchsSpece")
	public String prchsSpece(Model model
			,@RequestParam(required = false)String startDay
			,@RequestParam(required = false)String endDay) {
		
		logger.info("시작일 : " + startDay);
		logger.info("시작일 : " + endDay);
		
		//맵 만들기
		Map<String, String> dateMap = new HashMap<String, String>();
		
		//맵에 저장
		dateMap.put("startDay", startDay);
		dateMap.put("endDay", endDay);
		
		//매입명세서 목록 가져오기
		List<PrchsVO> speceList = prchsService.getPrchsSpeceList(dateMap);
		//model에 저장
		model.addAttribute("speceList", speceList);
		return "prchs/prchsSpece";
	}
}
