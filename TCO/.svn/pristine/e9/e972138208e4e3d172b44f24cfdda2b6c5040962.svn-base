package kr.or.tco.prchs.service.impl;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.tco.cnpt.vo.CnptVO;
import kr.or.tco.prchs.mapper.PrchsMapper;
import kr.or.tco.prchs.service.PrchsService;
import kr.or.tco.prchs.vo.PrchsVO;

@Service
public class PrchsServiceImpl implements PrchsService {
	
	@Autowired
	PrchsMapper prchsMapper;
	
	//매입 발주서 리스트 가져오기
	@Override
	public List<PrchsVO> getSvdPrchsOrdrList(Map<String, String> date) {
		return prchsMapper.getSvdPrchsOrdrList(date);
	}
	
	//매입 명세서 리스트 가져오기
	@Override
	public List<PrchsVO> getPrchsSpeceList(Map<String, String> date) {
		return prchsMapper.getPrchsSpeceList(date);
	}

	//거래처명 검색
	@Override
	public List<CnptVO> cnptSearchList(String keyWord) {
		return prchsMapper.cnptSearchList(keyWord);
	}
	
	@Override
	public JSONArray autoSearch(String keyWord) throws IOException {
		 
	    JSONArray arrayObj = new JSONArray();
	    JSONObject jsonObj = null; 
	    ArrayList<String> resultlist = new ArrayList<String>(); 
	 
	    // JPA 기능 사용, 포함 단어 검색 메서드인 findByMovieTitleContains();를 이용해도 괜찮음
//	    List<Movie> movies = prchsMapper.findByMovieTitleStartsWith(searchValue, Sort.by(Sort.Direction.ASC, "movieTitle"));
	    List<CnptVO> cnptVO = prchsMapper.cnptSearchList(keyWord);
	    
//	    String[] movies = {"톰소여의 모험","알간모르간","이터널스","톰소여와 함게","늑대와함께 톰소여","톰소여와 짜장면","톰소여와 짬뽕"};
	    
	    // 
	    int cnt = 0;
	   
	    for(CnptVO vo : cnptVO) { 
//	        String str = vo.getCnptNm();
//	        resultlist.add(str); 
	        
	        jsonObj = new JSONObject();
	        jsonObj.put("cnptNm", vo.getCnptNm());
	        jsonObj.put("cnptId", vo.getCnptId());
	        jsonObj.put("cnptCharger", vo.getCnptCharger());
	        jsonObj.put("cnptEmail", vo.getCnptMail());
	        arrayObj.add(jsonObj); 
	    } 
//	    //뽑은 후 json파싱 
//	    for(String str : resultlist) {
//	        jsonObj = new JSONObject();
//	        jsonObj.put("data", str);
//	        arrayObj.add(jsonObj); 
//	    } 
	 
	    return arrayObj;
	 
	}

	//매입아이디로 매입정보 가져오기
	@Override
	public List<PrchsVO> getPrchsVODetail(String prchsId) {
		return prchsMapper.getPrchsVODetail(prchsId);
	}
}
